version: '3.8'

services:
  database:
    image: postgres:15
    container_name: voting_database
    environment:
      POSTGRES_DB: voting_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: voting_backend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password@database:5432/voting_system
      PORT: 3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mobile:
    build:
      context: ./mobile
      dockerfile: Dockerfile
    container_name: voting_mobile
    ports:
      - "8081:8081"
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
    environment:
      EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
      REACT_NATIVE_PACKAGER_HOSTNAME: 0.0.0.0
      API_BASE_URL: http://backend:3000
    volumes:
      - ./mobile:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    stdin_open: true
    tty: true

volumes:
  postgres_data: